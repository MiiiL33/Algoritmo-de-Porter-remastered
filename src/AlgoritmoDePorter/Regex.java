package AlgoritmoDePorter;
import java.util.regex.*;
public class Regex{
    /////////////////////Reemplazo y/o eliminación de caracteres especiales/////////////////////
    private final String letras="(a-z)"; //todas las letras, desde la a hasta la z
    private final String findepalabra="\\b"; //reconoce espacios para definir como fin o inicio de palabra
    private final String puntuacion="\\p{Punct}";//elimina signos de puntuación
    private final String numeros="\\d";//elimina numeros
    private final String otros="";
    private final String espaciosconsecutivos=" * ";//elimina espacios consecutivos
    private final String caracteresA="[á|ä|à|â|ã]"; //reconoce 'a'es con caracteres especiales
    private final String caracteresE="[é|ë|è|ê]"; //reconoce 'e'es con caracteres especiales
    private final String caracteresI="[í|ï|ì|î]"; //reconoce 'i'es con caracteres especiales
    private final String caracteresO="[ó|ö|ò|ô]"; //reconoce 'o'es con caracteres especiales
    private final String caracteresU="[ú|ü|ù|û]"; //reconoce 'u'es con caracteres especiales
    /////////////////////Eliminación de prefijos/////////////////////
    private final String prefijoAn=findepalabra+"(an)"+letras+"*";
    private final String prefijoAnt=findepalabra+"(ant[e|i])"+letras+"*";
    private final String prefijoBi=findepalabra+"(bi[s]*)"+letras+"*";
    private final String prefijoCo=findepalabra+"(co[n]*)"+letras+"*";
    private final String prefijoContra=findepalabra+"(contra)"+letras+"*";
    private final String prefijoDe=findepalabra+"(de[s]*)"+letras+"*";
    private final String prefijoEn=findepalabra+"(en)"+letras+"*";
    private final String prefijoEntre=findepalabra+"(entre)"+letras+"*";
    private final String prefijoEx=findepalabra+"(ex)"+letras+"*";
    private final String prefijoExtra=findepalabra+"(extra)"+letras+"*";
    private final String prefijoHiper=findepalabra+"(hiper)"+letras+"*";
    private final String prefijoHipo=findepalabra+"(hipo)"+letras+"*";
    private final String prefijoIn=findepalabra+"(in)"+letras+"*";
    private final String prefijoInter=findepalabra+"(inter)"+letras+"*";
    private final String prefijoPost=findepalabra+"(post)"+letras+"*";
    private final String prefijoPre=findepalabra+"(pre)"+letras+"*";
    private final String prefijoRe=findepalabra+"(re)"+letras+"*";
    private final String prefijoSub=findepalabra+"(sub)"+letras+"*";
    private final String prefijoSuper=findepalabra+"(super)"+letras+"*";
    /////////////////////Eliminación de Sufijos/////////////////////
    private final String sufijoAzo=(letras+"*([a|i][z|d|n]o)"+findepalabra);
    private final String sufijoOn=(letras+"*([i|o]n)"+findepalabra);
    private final String sufijoOte=(letras+"*(ote)"+findepalabra);
    private final String sufijoAble=(letras+"*([i|a]ble)"+findepalabra);
    private final String sufijoAl=(letras+"*(a[l|r])"+findepalabra);
    private final String sufijoEnse=(letras+"*(en[s|t]e)"+findepalabra);
    private final String sufijoEño=(letras+"*([a|e]ño)"+findepalabra);
    private final String sufijoIble=(letras+"*([a|i]ble)"+findepalabra);
    private final String sufijoIdo=(letras+"*([i|u]do)"+findepalabra);
    private final String sufijoIl=(letras+"*(il)"+findepalabra);
    private final String sufijoIno=(letras+"*(c*i[n|z|t][o|a])"+findepalabra);
    private final String sufijoOso=(letras+"*(oso)"+findepalabra);
    private final String sufijoAje=(letras+"*(aj[o|e])"+findepalabra);
    private final String sufijoAncia=(letras+"*(ancia)"+findepalabra);
    private final String sufijoAnte=(letras+"*(ante)"+findepalabra);
    private final String sufijoLo=(letras+"*(l[o|a])"+findepalabra);
    /////////////////////Eliminación de pronombres/////////////////////
    private final String pronombreAlguien=(findepalabra+"alguien"+findepalabra);
    private final String pronombreAlgun=(findepalabra+"algun[os|as]*"+findepalabra);
    private final String pronombreAquel=(findepalabra+"aquel"+findepalabra);
    private final String pronombreAquell=(findepalabra+"aquell[o|a][s]*"+findepalabra);
    private final String pronombreBastante=(findepalabra+"bastante[s]*"+findepalabra);        
    private final String pronombreConmigo=(findepalabra+"con[m|s]igo"+findepalabra);
    private final String pronombreDos=(findepalabra+"dos"+findepalabra);
    private final String pronombreTres=(findepalabra+"tres"+findepalabra);
    private final String pronombreCuatro=(findepalabra+"cuatro"+findepalabra);
    private final String pronombreCinco=(findepalabra+"cinco"+findepalabra);
    private final String pronombreSeis=(findepalabra+"seis"+findepalabra);
    private final String pronombreSiete=(findepalabra+"siete"+findepalabra);
    private final String pronombreOcho=(findepalabra+"ocho"+findepalabra);
    private final String pronombreNueve=(findepalabra+"nueve"+findepalabra);
    private final String pronombreEllo=(findepalabra+"ell[o|a][s]*"+findepalabra);
    private final String pronombreEso=(findepalabra+"es[o|a][s]*"+findepalabra);
    private final String pronombreEse=(findepalabra+"es[t]*e"+findepalabra);
    private final String pronombreEsto=(findepalabra+"est[o|a][s]*"+findepalabra);
    private final String pronombreLo=(findepalabra+"l[o|a|e][s]*"+findepalabra);
    private final String pronombreMi=(findepalabra+"mi[o|a][s]*"+findepalabra);
    private final String pronombreMucho=(findepalabra+"much[o|a][s]*"+findepalabra);
    private final String pronombreNada=(findepalabra+"nada"+findepalabra);
    private final String pronombreNadie=(findepalabra+"nadie"+findepalabra);
    private final String pronombreNingun=(findepalabra+"ningun"+findepalabra);
    private final String pronombreNinguno=(findepalabra+"ningun[o|a][s]*"+findepalabra);
    private final String pronombreNuestro=(findepalabra+"nuestr[o|a][s]*"+findepalabra);
    private final String pronombreOtro=(findepalabra+"otr[o|a][s]*"+findepalabra);
    private final String pronombrePara=(findepalabra+"para"+findepalabra);
    private final String pronombrePoco=(findepalabra+"poc[o|a][s]*"+findepalabra);
    private final String pronombrePrimer=(findepalabra+"primer[os|as]*"+findepalabra);
    private final String pronombreSe=(findepalabra+"s[e|i|u]"+findepalabra);
    private final String pronombreSegund=(findepalabra+"segund[o|a][s]*"+findepalabra);
    private final String pronombreSuyo=(findepalabra+"suy[o|a][s]*"+findepalabra);
    private final String pronombreTe=(findepalabra+"t[e|i|u]"+findepalabra);
    private final String pronombreTercer=(findepalabra+"tercer[os|as]*"+findepalabra);
    private final String pronombreToda=(findepalabra+"tod[o|a][s]*"+findepalabra);
    private final String pronombreTuyo=(findepalabra+"tuy[o|a][s]*"+findepalabra);
    private final String pronombreUn=(findepalabra+"un"+findepalabra);
    private final String pronombreUno=(findepalabra+"un[o|a][s]*"+findepalabra);
    private final String pronombreVarios=(findepalabra+"vari[o|a][s]*"+findepalabra);
    private final String pronombreVosotros=(findepalabra+"vosotr[o|a][s]*"+findepalabra);
    private final String pronombreVuestro=(findepalabra+"vuestr[o|a][s]*"+findepalabra);
    private final String pronombreYo=(findepalabra+"yo"+findepalabra);
    private final String pronombreComo=(findepalabra+"como"+findepalabra);
    /////////////////////Eliminación de artículos/////////////////////
    private final String articuloEn = findepalabra+"en"+findepalabra;
    private final String articuloEl = findepalabra+"el"+findepalabra;
    private final String articuloLa = findepalabra+"la"+findepalabra;
    private final String articuloLos = findepalabra+"los"+findepalabra;
    private final String articuloLas = findepalabra+"las"+findepalabra;
    private final String articuloLo = findepalabra+"lo"+findepalabra;
    private final String articuloUn = findepalabra+"un"+findepalabra;
    private final String articuloUnos = findepalabra+"unos"+findepalabra;
    private final String articuloUna = findepalabra+"una"+findepalabra;
    private final String articuloUnas = findepalabra+"unas"+findepalabra;
    private final String articuloDe = findepalabra+"de[l]*"+findepalabra;
    private final String articuloQue = findepalabra+"que"+findepalabra;
    private final String articuloComo = findepalabra+"como"+findepalabra;
    private final String articuloCuando = findepalabra+"cuando"+findepalabra;
    private final String articuloDonde = findepalabra+"donde"+findepalabra;
    private final String articuloQuien = findepalabra+"quien"+findepalabra;
    private final String articuloPor = findepalabra+"por"+findepalabra;
    private final String articuloPara = findepalabra+"para"+findepalabra;
    
    public String borrarTildes(String texto){
        String reemplazo;
        Pattern espconsec=Pattern.compile(espaciosconsecutivos);
        Pattern Atilde = Pattern.compile(caracteresA);
        Pattern Etilde = Pattern.compile(caracteresE);
        Pattern Itilde = Pattern.compile(caracteresI);    //detectando las vocales con acentos y otros
        Pattern Otilde = Pattern.compile(caracteresO);
        Pattern Utilde = Pattern.compile(caracteresU);
        Matcher empareja; //declaración de una clase empareja, la cual contiene métodos para encontrar patrones
        empareja=Atilde.matcher(texto);
        reemplazo=empareja.replaceAll("a");  //reemplazando por 'a'
        empareja=Etilde.matcher(reemplazo);
        reemplazo=empareja.replaceAll("e");  //reemplazando por 'e'
        empareja=Itilde.matcher(reemplazo);
        reemplazo=empareja.replaceAll("i");  //reemplazando por 'i'
        empareja=Otilde.matcher(reemplazo); 
        reemplazo=empareja.replaceAll("o");  //reemplazando por 'o'
        empareja=Utilde.matcher(reemplazo);
        reemplazo=empareja.replaceAll("u");  //reemplazando por 'u'
        empareja=espconsec.matcher(reemplazo);
        reemplazo=empareja.replaceAll(" ");
        if (reemplazo.charAt(0) == (' ')) return reemplazo.substring(1);
        return reemplazo;
    }
    public String borrarPuntuacionYNumeros(String texto){
        Pattern puntos=Pattern.compile(puntuacion);
        Pattern digitos=Pattern.compile(numeros);
        Pattern espconsec=Pattern.compile(espaciosconsecutivos);
        Matcher empareja; //declaración de una clase Matcher, la cual contiene métodos para encontrar patrones
        String reemplazo;
        empareja=puntos.matcher(texto);
        reemplazo=empareja.replaceAll("");   //reemplazo de puntuaciones por espacio en blanco
        empareja=digitos.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");   //reemplazo de digitos por espacio en blanco
        empareja=espconsec.matcher(reemplazo);
        reemplazo=empareja.replaceAll(" ");
        if (reemplazo.charAt(0) == (' ')) return reemplazo.substring(1);
        return reemplazo;
    }
    public String borrarPronombres(String texto){
        String reemplazo;
        Pattern espconsec=Pattern.compile(espaciosconsecutivos);
        Pattern patternAlguien=Pattern.compile(pronombreAlguien);
        Pattern patternAlgun=Pattern.compile(pronombreAlgun);
        Pattern patternAquel=Pattern.compile(pronombreAquel);
        Pattern patternAquell=Pattern.compile(pronombreAquell);
        Pattern patternBastante=Pattern.compile(pronombreBastante);
        Pattern patternComo=Pattern.compile(pronombreComo);
        Pattern patternConmigo=Pattern.compile(pronombreConmigo);
        Pattern patternDos=Pattern.compile(pronombreDos);
        Pattern patternTres=Pattern.compile(pronombreTres);
        Pattern patternCuatro=Pattern.compile(pronombreCuatro);
        Pattern patternCinco=Pattern.compile(pronombreCinco);
        Pattern patternSeis=Pattern.compile(pronombreSeis);
        Pattern patternSiete=Pattern.compile(pronombreSiete);
        Pattern patternOcho=Pattern.compile(pronombreOcho);
        Pattern patternNueve=Pattern.compile(pronombreNueve);
        Pattern patternEllo=Pattern.compile(pronombreEllo);
        Pattern patternEso=Pattern.compile(pronombreEso);
        Pattern patternEse=Pattern.compile(pronombreEse);
        Pattern patternEsto=Pattern.compile(pronombreEsto);
        Pattern patternLo=Pattern.compile(pronombreLo);
        Pattern patternMi=Pattern.compile(pronombreMi);
        Pattern patternMucho=Pattern.compile(pronombreMucho);
        Pattern patternNada=Pattern.compile(pronombreNada);
        Pattern patternNadie=Pattern.compile(pronombreNadie);
        Pattern patternNingun=Pattern.compile(pronombreNingun);
        Pattern patternNinguno=Pattern.compile(pronombreNinguno);
        Pattern patternNuestro=Pattern.compile(pronombreNuestro);
        Pattern patternOtro=Pattern.compile(pronombreOtro);
        Pattern patternPara=Pattern.compile(pronombrePara);
        Pattern patternPoco=Pattern.compile(pronombrePoco);
        Pattern patternPrimer=Pattern.compile(pronombrePrimer);
        Pattern patternSe=Pattern.compile(pronombreSe);
        Pattern patternSegund=Pattern.compile(pronombreSegund);
        Pattern patternSuyo=Pattern.compile(pronombreSuyo);
        Pattern patternTe=Pattern.compile(pronombreTe);
        Pattern patternTercer=Pattern.compile(pronombreTercer);
        Pattern patternToda=Pattern.compile(pronombreToda);
        Pattern patternTuyo=Pattern.compile(pronombreTuyo);
        Pattern patternUn=Pattern.compile(pronombreUn);
        Pattern patternUno=Pattern.compile(pronombreUno);
        Pattern patternVarios=Pattern.compile(pronombreVarios);
        Pattern patternVosotros=Pattern.compile(pronombreVosotros);
        Pattern patternVuestro=Pattern.compile(pronombreVuestro);
        Pattern patternYo=Pattern.compile(pronombreYo);
        //comparando con cada pronombre, para luego reemplazar
        Matcher empareja = patternAlguien.matcher(texto);
        reemplazo=empareja.replaceAll("");
        empareja=patternAlgun.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternAquel.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternAquell.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternBastante.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternConmigo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternDos.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternTres.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternCuatro.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternCinco.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternSeis.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternSiete.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternOcho.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternNueve.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternEllo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternEso.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternEse.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternEsto.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternLo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternMi.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternMucho.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternNada.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternNadie.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternNingun.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternNinguno.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternNuestro.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternOtro.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternPara.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternPoco.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternPrimer.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternSe.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternPrimer.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternSegund.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternSuyo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternTe.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternTercer.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternToda.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternTuyo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternUn.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternUno.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternVarios.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternVosotros.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternVuestro.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternYo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=espconsec.matcher(reemplazo);
        reemplazo=empareja.replaceAll(" ");
        if (reemplazo.charAt(0) == (' ')) return reemplazo.substring(1);
        return reemplazo;      
    }
    public String borrarArticulos(String texto){
        Pattern espconsec=Pattern.compile(espaciosconsecutivos);
        Pattern patternEn=Pattern.compile(articuloEn);
        Pattern patternEl=Pattern.compile(articuloEl);
        Pattern patternLa=Pattern.compile(articuloLa);
        Pattern patternLos=Pattern.compile(articuloLos);
        Pattern patternLas=Pattern.compile(articuloLas);
        Pattern patternLo=Pattern.compile(articuloLo);
        Pattern patternUn=Pattern.compile(articuloUn);
        Pattern patternUnos=Pattern.compile(articuloUnos);
        Pattern patternUna=Pattern.compile(articuloUna);
        Pattern patternUnas=Pattern.compile(articuloUnas);
        Pattern patternDe=Pattern.compile(articuloDe);
        Pattern patternQue=Pattern.compile(articuloQue);
        Pattern patternComo=Pattern.compile(articuloComo);
        Pattern patternCuando=Pattern.compile(articuloCuando);
        Pattern patternDonde=Pattern.compile(articuloDonde);
        Pattern patternQuien=Pattern.compile(articuloQuien);
        Pattern patternPor=Pattern.compile(articuloPor);
        Pattern patternPara=Pattern.compile(articuloPara);
        String reemplazo;
        Matcher empareja=patternEn.matcher(texto);
        reemplazo=empareja.replaceAll("");
        empareja=patternEl.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternLa.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternLos.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternLas.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternLo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternUn.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternUnos.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternUna.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternUnas.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternDe.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternQue.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternComo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternCuando.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternDonde.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternQuien.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternPor.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternPara.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=espconsec.matcher(reemplazo);
        reemplazo=empareja.replaceAll(" ");
        if (reemplazo.charAt(0) == (' ')) return reemplazo.substring(1);
        return reemplazo;
    }
    public String borrarPrefijos(String texto){
        Pattern espconsec=Pattern.compile(espaciosconsecutivos);
        Pattern patternAn=Pattern.compile(prefijoAn);
        Pattern patternAnt=Pattern.compile(prefijoAnt);
        Pattern patternBi=Pattern.compile(prefijoBi);
        Pattern patternCo=Pattern.compile(prefijoCo);
        Pattern patternContra=Pattern.compile(prefijoContra);
        Pattern patternDe=Pattern.compile(prefijoDe);
        Pattern patternEn=Pattern.compile(prefijoEn);
        Pattern patternEntre=Pattern.compile(prefijoEntre);
        Pattern patternEx=Pattern.compile(prefijoEx);
        Pattern patternExtra=Pattern.compile(prefijoExtra);
        Pattern patternHiper=Pattern.compile(prefijoHiper);
        Pattern patternHipo=Pattern.compile(prefijoHipo);
        Pattern patternIn=Pattern.compile(prefijoIn);
        Pattern patternInter=Pattern.compile(prefijoInter);
        Pattern patternPost=Pattern.compile(prefijoPost);
        Pattern patternPre=Pattern.compile(prefijoPre);
        Pattern patternRe=Pattern.compile(prefijoRe);
        Pattern patternSub=Pattern.compile(prefijoSub);
        Pattern patternSuper=Pattern.compile(prefijoSuper);
        String reemplazo;
        Matcher empareja=patternAn.matcher(texto);
        reemplazo=empareja.replaceAll("");
        empareja=patternAnt.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternBi.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternCo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternContra.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternDe.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternEn.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternEntre.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternEx.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternExtra.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternHiper.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternHipo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternIn.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternInter.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternPost.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternPre.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternRe.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternSub.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternSuper.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=espconsec.matcher(reemplazo);
        reemplazo=empareja.replaceAll(" ");
        if (reemplazo.charAt(0) == (' ')) return reemplazo.substring(1);
        return reemplazo;
    }
    public String borrarSufijos(String texto){
        Pattern patternAzo=Pattern.compile(sufijoAzo);
        Pattern patternOn=Pattern.compile(sufijoOn);
        Pattern patternOte=Pattern.compile(sufijoOte);
        Pattern patternAble=Pattern.compile(sufijoAble);
        Pattern patternAl=Pattern.compile(sufijoAl);
        Pattern patternEnse=Pattern.compile(sufijoEnse);
        Pattern patternEño=Pattern.compile(sufijoEño);
        Pattern patternIble=Pattern.compile(sufijoIble);
        Pattern patternIdo=Pattern.compile(sufijoIdo);
        Pattern patternIl=Pattern.compile(sufijoIl);
        Pattern patternIno=Pattern.compile(sufijoIno);
        Pattern patternOso=Pattern.compile(sufijoOso);
        Pattern patternAje=Pattern.compile(sufijoAje);
        Pattern patternAncia=Pattern.compile(sufijoAncia);
        Pattern patternAnte=Pattern.compile(sufijoAnte);
        Pattern patternLo=Pattern.compile(sufijoLo);
        String reemplazo;
        Matcher empareja=patternAzo.matcher(texto);
        reemplazo=empareja.replaceAll("");
        empareja=patternOn.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternOte.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternLo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternAble.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternAl.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternEnse.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternEño.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternIble.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternIdo.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternIl.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternIno.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternOso.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternAje.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternAncia.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=patternAnte.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        if (reemplazo.charAt(0) == (' ')) return reemplazo.substring(1);
        return reemplazo;
    }
    public String borrarTextoResidual(String Texto){
        Pattern espconsec=Pattern.compile(espaciosconsecutivos);
        Pattern adicional=Pattern.compile("[¿|¡|–|…|³|º]");
        Pattern residuo=Pattern.compile("\\b[a-z]{1,2}\\b"); //quita palabras de 2 caracteres o menos
        Pattern espacio=Pattern.compile("[\\n|\t]"); //quita tabulaciones
        Pattern saltosDeLinea=Pattern.compile("\\s{1,}"); //quita uno o mas saltos de línea
        Pattern otro=Pattern.compile(otros);
        String reemplazo;
        Matcher empareja=residuo.matcher(Texto);
        reemplazo=empareja.replaceAll("");
        empareja=espacio.matcher(reemplazo);
        reemplazo=empareja.replaceAll(" ");
        empareja=saltosDeLinea.matcher(reemplazo);
        reemplazo=empareja.replaceAll(" ");        
        empareja=adicional.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=otro.matcher(reemplazo);
        reemplazo=empareja.replaceAll("");
        empareja=espconsec.matcher(reemplazo);
        reemplazo=empareja.replaceAll(" ");
        if (reemplazo.charAt(0) == (' ')) return reemplazo.substring(1);
        return reemplazo;
   }
}